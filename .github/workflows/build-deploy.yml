name: Build and Deploy (API - Docker)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: nex-koala-api
  TARBALL_NAME: nex-koala-api.tar
  CONTAINER_NAME: nex-koala-api
  TARGET_PORT: 8080

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: ‚¨áÔ∏è Checkout Source Code
      uses: actions/checkout@v4

    - name: üõ† Build Docker Image
      run: docker build -t ${{ env.IMAGE_NAME }} .

    - name: üì¶ Save Docker Image as Tarball
      run: |
        echo "Saving Docker image to tarball: ${{ env.TARBALL_NAME }}"
        docker save ${{ env.IMAGE_NAME }} -o ${{ env.TARBALL_NAME }}

    - name: üîê Set Appropriate Permissions for SCP
      run: |
        echo "Adjusting file permissions for tarball"
        chmod 644 ${{ env.TARBALL_NAME }}

    - name: üöÄ Transfer Image to Remote Server
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: ${{ env.TARBALL_NAME }}
        target: /tmp/
        overwrite: true

    - name: üîÑ Load and Run Docker Container on Remote Host
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "Cleaning up existing container (if any)..."
          docker rm -f ${{ env.CONTAINER_NAME }} || true

          echo "Loading Docker image..."
          docker load -i /tmp/${{ env.TARBALL_NAME }}

          echo "Starting new container: ${{ env.CONTAINER_NAME }}"
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --add-host=host.docker.internal:host-gateway \
            -p ${{ env.TARGET_PORT }}:${{ env.TARGET_PORT }}  \
            --restart always \
            -e "DatabaseOptions__ConnectionString=Host=host.docker.internal;Port=5432;Database=einvoice;Username=postgres;Password=Nex@123" \
            -e "ConnectionStrings__ClientConnection=Server=host.docker.internal,1433;Database=U1STMC;User Id=sa;Password=Nex@1234;MultipleActiveResultSets=true;TrustServerCertificate=True" \
            ${{ env.IMAGE_NAME }}

          echo "‚úÖ API deployment completed on $(hostname) at $(date)"
