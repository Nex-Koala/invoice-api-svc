name: Build Deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    - name: Restore & Clean
      run: |
        dotnet clean
        dotnet restore ./NexKoala.API.sln --verbosity minimal

    - name: Build the Application
      run: dotnet build ./NexKoala.API.sln --configuration Release --no-restore

    - name: Publish the Application
      run: dotnet publish ./NexKoala.API.sln -c Release -o ./publish --no-build

    - name: Create ZIP Archive
      run: zip -r app.zip ./publish

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-build
        path: app.zip   # ‚úÖ Correct file name

    - name: Setup SSH Key & Known Hosts
      run: |
        mkdir -p ~/.ssh
        printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "echo 'SSH connection successful'"
        
    - name: Copy Files to Server
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -P ${{ secrets.SSH_PORT }} app.zip ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:/nex-koala/api/
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      shell: bash

    - name: Deploy on Server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          timestamp=$(date +%Y%m%d_%H%M%S)
        
          # Create backup directory
          mkdir -p /nex-koala/backup
        
          # Move app.zip temporarily to avoid deletion
          mv /nex-koala/api/app.zip /tmp/app.zip
        
          # Backup existing code
          if [ "$(ls -A /nex-koala/api)" ]; then
            echo "üì¶ Creating backup archive..."
            tar -czf /nex-koala/backup/api_backup_$timestamp.tar.gz -C /nex-koala/api .
          else
            echo "‚ÑπÔ∏è /nex-koala/api is empty, no backup created"
          fi
        
          # Clear old deployment
          rm -rf /nex-koala/api/*
          echo "üßπ Cleared /nex-koala/api"
        
          # Move app.zip back and deploy
          mv /tmp/app.zip /nex-koala/api/
          cd /nex-koala/api
          unzip -o app.zip
          rm app.zip
        
          # Restart the service
          systemctl restart invoice-api.service
          echo "‚úÖ Deployment complete."
